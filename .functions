function color_name {
  if [ "$USER" = "root" ]; then echo -e "\e[31m$USER"  #if the user is root than the username color is red
  else echo -e "\e[33m$USER"  #otherwise print just the user name
  fi
}
function arrow {
  #echo -E $'\u25B6';  #uni-code for arrow
  echo -E '▶';  #uni-code for arrow
}
function block {
  #echo -E $'\u25AC';  #uni-code for the block
  echo -E '▬';  #uni-code for the block
}
function error {
  [[ $? -gt 0 ]] && echo -E '✖'  #check is the last command was a failure
}
function bgjobs {
  [[ `jobs -l | wc -l` -gt 0 ]] && echo -E " ⚙"  #check if the current user has background jobs
}
function gitPlugin () {  #git Plugin
  # Get the repository's branch for this repo, in this version only a single branch is admitted
  gitString=''  #value return string
  branch=`git symbolic-ref --short HEAD 2>/dev/null`  #first current branch
  if [[ `git --version` =~ 'git version' ]]; then #checking if git is installed
    if [[ `git status 2>&1` =~ 'ot a git repository' ]]; then  #check if it is a repository and if not so, just print the arrow to end the line
      gitString+="\e[49m\e[34m$(arrow)"
    else if [[ `git status 2>&1` =~ 'Your branch is up to date' ]] && [[ `git status | wc -l` -eq "4" ]]; then  #check if the branch is up to date with no mods, if so print a green banner with the branch symbol and the branch name
      gitString+="\e[42m\e[34m"
      gitString+="$(arrow) "
      gitString+="\e[30m"
      gitString+=$'\u2387'
      gitString+=" \e[42m $branch \e[32m\e[49m$(arrow)"
      else
        # yellow banner
        gitString+="\e[43m\e[38;5;04m$(arrow) \e[30m"
        gitString+=$'\u2387'
        gitString+="  $branch "

        if [[ `git status 2>&1` =~ 'Changes not staged for commit' ]]; then
          # a plus meaning you have to `git add .`
          gitString+=$'\u271A'
          gitString+=" "
        fi
        if [[ `git status 2>&1` =~ 'Changes to be committed' ]]; then
          # a big dot meaning you have to 'git commit'
          gitString+=$'\u25CF'
          gitString+=" "
        fi
        if [[ `git status 2>&1` =~ 'Your branch is ahead of' ]]; then
          gitString+=$'\u21D1'
          gitString+=" "
        fi
        # ending part of the string
        gitString+="\e[49m\e[33m$(arrow)"
      fi
    fi
  echo -ne "$gitString"
  else 
    echo -ne "\e[49m\e[34m$(arrow)" #if git isn't installed just always print the arrow
  fi
}
function gitPushAll() {
  if [ "$#" -eq "0" ]; then
    message="Mods applied to the Repo"
  else
    message="$1"
  fi

  git add --all
  git commit -m "$message"
  git push
}
function makeBackUpFile() {
  cp $1 $1.bak
  echo "made $1 backup file"
}
function sshrc() {
  scp -q "$PMP/.sshrc" "$PMP/.ssh_logout" "$1:/tmp"
  ssh -t $1 'echo "source /tmp/.sshrc" >> ~/.bashrc; echo "source /tmp/.ssh_logout" >> ~/.bash_logout; export PMP="/tmp"; exec bash -i'
}
